// Code generated by ent, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIsUsed holds the string denoting the is_used field in the database.
	FieldIsUsed = "is_used"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldUserName holds the string denoting the user_name field in the database.
	FieldUserName = "user_name"
	// FieldBirthday holds the string denoting the birthday field in the database.
	FieldBirthday = "birthday"
	// FieldWeight holds the string denoting the weight field in the database.
	FieldWeight = "weight"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldStoreID holds the string denoting the store_id field in the database.
	FieldStoreID = "store_id"
	// EdgeMystore holds the string denoting the mystore edge name in mutations.
	EdgeMystore = "mystore"
	// Table holds the table name of the user in the database.
	Table = "users"
	// MystoreTable is the table that holds the mystore relation/edge. The primary key declared below.
	MystoreTable = "store_users"
	// MystoreInverseTable is the table name for the Store entity.
	// It exists in this package in order to avoid circular dependency with the "store" package.
	MystoreInverseTable = "stores"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldIsUsed,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldUserID,
	FieldUserName,
	FieldBirthday,
	FieldWeight,
	FieldType,
	FieldStoreID,
}

var (
	// MystorePrimaryKey and MystoreColumn2 are the table columns denoting the
	// primary key for the mystore relation (M2M).
	MystorePrimaryKey = []string{"store_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsUsed holds the default value on creation for the "is_used" field.
	DefaultIsUsed bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
